#!/bin/bash


# -------------------------------
# How to run this script:
# >>>>> ./md-to-html <FolderName>
# if no argument passed then it will check in the
# current folder by default
# -------------------------------


# Get folder name from first argument, default to 'docs'
INPUT_DIR=${1:-"./"}

# Check if the folder exists
if [ ! -d "$INPUT_DIR" ]; then
    echo "Error: Directory '$INPUT_DIR' does not exist."
    exit 1
fi

# HTML wrapper template parts
HTML_HEAD='<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>'
HTML_MID='</title>
	<meta name="description" content="'
HTML_TAIL='">
	<link rel="stylesheet"
		href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" />
	<style>
		.container {
			padding-top: 40px;
			padding-bottom: 40px;
			border-top: 8px solid var(--pico-primary);
		}
		@media (min-width: 1536px) {
			.container {
				max-width: 1200px;
			}
		}
	</style>
	<!--- PRISM CSS --->
	<link rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/themes/prism-okaidia.min.css" />
	<!--- HIGHLIGHT CSS --->
	<link rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/github-dark.min.css"
		integrity="sha512-rO+olRTkcf304DQBxSWxln8JXCzTHlKnIdnMUwYvQa9/Jd4cQaNkItIUj6Z4nvW1dqK0SKXLbn9h4KwZTNtAyw=="
		crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
	<main class="container">
		<!--- ALL YOUR CONTENT HERE --->'
HTML_END='<!--- ALL YOUR CONTENT HERE --->
	</main>
	<!--- HIGHLIGHT JS --->
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"
		integrity="sha512-EBLzUL8XLl+va/zAsmXwS7Z2B1F9HUHkZwyS/VKwh3S7T/U0nF4BaU29EP/ZSf6zgiIxYAnKLu6bJ8dqpmX5uw=="
		crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/languages/json.min.js"
		integrity="sha512-f2/ljYb/tG4fTHu6672tyNdoyhTIpt4N1bGrBE8ZjwIgrjDCd+rljLpWCZ2Vym9PBWQy2Tl9O22Pp2rMOMvH4g=="
		crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/languages/java.min.js"
		integrity="sha512-DTx6faal3nhEB55v+yn8UnXCxaxCdMR6gBZ0zzXhGD2qvtgf6xbW5iA7G4CUn78R9PoPzTelR7xIQwGNUJAv2w=="
		crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script
		src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/languages/bash.min.js"
		integrity="sha512-nQ9BQEzuov+Ry6EIH8ve7VKKdOG91Ix3SAQcFmOiBR5qG8sJONrph1InWTJOGjfP5QkSTSy4VnkEsPMoFYRsUQ=="
		crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script>hljs.highlightAll();</script>
</body>
</html>'

# Loop through markdown files
for filepath in "$INPUT_DIR"/*.md; do
    filename=$(basename -- "$filepath")
    base="${filename%.*}"
    temp_file="${INPUT_DIR}/${base}_temp.html"
    output_file="${INPUT_DIR}/${base}.html"

    # Use npx + showdown to convert markdown to temporary HTML inside INPUT_DIR
    npx showdown makehtml -i "$filepath" -o "$temp_file"

    if [ ! -f "$temp_file" ]; then
        echo "Failed to generate HTML for $filename"
        continue
    fi

    # Read the content generated by showdown
    content=$(cat "$temp_file")
    rm "$temp_file"  # Clean up temp file immediately

    # Combine all parts and write the final HTML file inside the input directory
    {
        echo "$HTML_HEAD$base$HTML_MID$base$HTML_TAIL"
        echo "$content"
        echo "$HTML_END"
    } > "$output_file"

    echo "Converted $filename -> $output_file"
done

echo "Conversion complete. HTML files saved in the '$INPUT_DIR' directory."